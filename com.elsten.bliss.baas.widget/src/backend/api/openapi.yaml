openapi: 3.0.1
info:
  title: BaaS
  description: The BaaS API allows the assessment of a set of "storage-node"s. It
    operates an asynchronous model - first a new assessment is POSTed to /assessment,
    then its progress can be monitored via a GET to /job. When the job is complete,
    GET /assessment will return the details of the assessment.
  contact:
    email: dan@elstensoftware.com
  version: 0.0.0
servers:
- url: /
paths:
  /assessment/{id}:
    get:
      summary: Retrieves all assessments for the specified ID
      operationId: get
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 45bffd2d-e5c7-44a9-bbe5-140630c95cd2
      responses:
        "200":
          description: The assessments for the ID
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assessment'
                x-content-type: application/json
      x-swagger-router-controller: Default
  /job/{id}:
    get:
      summary: Retrieves all jobs for the specified ID
      operationId: get_1
      parameters:
      - name: id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 45bffd2d-e5c7-44a9-bbe5-140630c95cd2
      responses:
        "200":
          description: The job for the ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
      x-swagger-router-controller: Default
  /assessment:
    post:
      summary: Submit a new assessment
      operationId: post
      requestBody:
        description: Query incorporating details of the storage nodes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
        required: true
      responses:
        "202":
          description: The new job ID
          headers:
            Content-Location:
              description: The location of the new job.
              style: simple
              explode: false
              schema:
                type: string
                example: 8d40bb59-c8ba-428f-8bf6-e7699564cda6
      x-swagger-router-controller: Default
components:
  schemas:
    Album:
      type: object
      properties:
        title:
          type: string
        artists:
          type: array
          items:
            type: string
        tracks:
          type: array
          items:
            $ref: '#/components/schemas/Track'
      example:
        artists:
        - artists
        - artists
        title: title
        tracks:
        - path:
            path: /First album/1_track-one.mp3
            lib: /C:/Users/gavin/Music
          position: position
          title: title
        - path:
            path: /First album/1_track-one.mp3
            lib: /C:/Users/gavin/Music
          position: position
          title: title
    Assessment:
      type: object
      properties:
        album:
          $ref: '#/components/schemas/Album'
        assessment:
          $ref: '#/components/schemas/AssessmentExecution'
      example:
        assessment:
          cost: 0
          compliance:
            parts:
            - summary: summary
              responses:
              - ""
              - ""
              source:
                policyDescriptor: policyDescriptor
                category: category
              state: state
              detail: detail
            - summary: summary
              responses:
              - ""
              - ""
              source:
                policyDescriptor: policyDescriptor
                category: category
              state: state
              detail: detail
        album:
          artists:
          - artists
          - artists
          title: title
          tracks:
          - path:
              path: /First album/1_track-one.mp3
              lib: /C:/Users/gavin/Music
            position: position
            title: title
          - path:
              path: /First album/1_track-one.mp3
              lib: /C:/Users/gavin/Music
            position: position
            title: title
    AssessmentExecution:
      type: object
      properties:
        compliance:
          $ref: '#/components/schemas/ComplianceContainer'
        cost:
          type: integer
          format: int32
      example:
        cost: 0
        compliance:
          parts:
          - summary: summary
            responses:
            - ""
            - ""
            source:
              policyDescriptor: policyDescriptor
              category: category
            state: state
            detail: detail
          - summary: summary
            responses:
            - ""
            - ""
            source:
              policyDescriptor: policyDescriptor
              category: category
            state: state
            detail: detail
    Compliance:
      type: object
      properties:
        source:
          $ref: '#/components/schemas/ComplianceSource'
        state:
          type: string
        summary:
          type: string
        detail:
          type: string
        responses:
          type: array
          items:
            $ref: '#/components/schemas/Response'
      description: The assessment of some music against a rule. For example, if a
        rule states album artwork should be embedded, the compliance will state whether
        embedded art was found in the music.
      example:
        summary: summary
        responses:
        - ""
        - ""
        source:
          policyDescriptor: policyDescriptor
          category: category
        state: state
        detail: detail
    ComplianceContainer:
      type: object
      properties:
        parts:
          type: array
          items:
            $ref: '#/components/schemas/Compliance'
      example:
        parts:
        - summary: summary
          responses:
          - ""
          - ""
          source:
            policyDescriptor: policyDescriptor
            category: category
          state: state
          detail: detail
        - summary: summary
          responses:
          - ""
          - ""
          source:
            policyDescriptor: policyDescriptor
            category: category
          state: state
          detail: detail
    ComplianceSource:
      type: object
      properties:
        category:
          type: string
        policyDescriptor:
          type: string
      example:
        policyDescriptor: policyDescriptor
        category: category
    InstallImageFromUrlResponse:
      type: object
      description: A response that installs an image at the specified URL into some
        music
      allOf:
      - $ref: '#/components/schemas/Response'
      - type: object
        properties:
          url:
            type: string
            format: url
          width:
            type: integer
            format: int32
          height:
            type: integer
            format: int32
    QualifiedPath:
      type: object
      properties:
        lib:
          type: string
          description: The path to the root of the music library
          example: /C:/Users/gavin/Music
        path:
          type: string
          description: The path, relative to the root of the music library, to this
            storage node
          example: /First album/1_track-one.mp3
      example:
        path: /First album/1_track-one.mp3
        lib: /C:/Users/gavin/Music
    Response:
      type: object
      description: A description of some action that can be taken to fix non-compliant
        music.
      oneOf:
      - $ref: '#/components/schemas/Response'
      - $ref: '#/components/schemas/InstallImageFromUrlResponse'
    Track:
      type: object
      properties:
        title:
          type: string
        position:
          type: string
        path:
          $ref: '#/components/schemas/QualifiedPath'
      example:
        path:
          path: /First album/1_track-one.mp3
          lib: /C:/Users/gavin/Music
        position: position
        title: title
    Job:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          example: Completed
          enum:
          - Submitted
          - Assessing
          - Completed
          - Failed
        completed-location:
          type: string
        query:
          $ref: '#/components/schemas/Query'
      example:
        query:
          storage-nodes:
          - path: /First album/1_track-one.mp3
            lib: /C:/Users/gavin/Music
            fields:
              COVER_ART:
                codec: jpeg
                size-bytes: 2048290304
                width: 300
                height: 300
              ALBUM_NAME: The Dark Side of the Moon
              ARTIST: Spinal Tap
              TRACK_NAME: God Only Knows
              TRACK_NUMBER: "2"
              YEAR: "1992"
              DISC_NUMBER: "2"
              COMPILATION: true
              GENRE: GENRE
              ALBUM_ARTIST: ALBUM_ARTIST
              empty: true
          - path: /First album/1_track-one.mp3
            lib: /C:/Users/gavin/Music
            fields:
              COVER_ART:
                codec: jpeg
                size-bytes: 2048290304
                width: 300
                height: 300
              ALBUM_NAME: The Dark Side of the Moon
              ARTIST: Spinal Tap
              TRACK_NAME: God Only Knows
              TRACK_NUMBER: "2"
              YEAR: "1992"
              DISC_NUMBER: "2"
              COMPILATION: true
              GENRE: GENRE
              ALBUM_ARTIST: ALBUM_ARTIST
              empty: true
        completed-location: completed-location
        id: id
        status: Completed
    Query:
      type: object
      properties:
        storage-nodes:
          type: array
          items:
            $ref: '#/components/schemas/StorageNode'
      example:
        storage-nodes:
        - path: /First album/1_track-one.mp3
          lib: /C:/Users/gavin/Music
          fields:
            COVER_ART:
              codec: jpeg
              size-bytes: 2048290304
              width: 300
              height: 300
            ALBUM_NAME: The Dark Side of the Moon
            ARTIST: Spinal Tap
            TRACK_NAME: God Only Knows
            TRACK_NUMBER: "2"
            YEAR: "1992"
            DISC_NUMBER: "2"
            COMPILATION: true
            GENRE: GENRE
            ALBUM_ARTIST: ALBUM_ARTIST
            empty: true
        - path: /First album/1_track-one.mp3
          lib: /C:/Users/gavin/Music
          fields:
            COVER_ART:
              codec: jpeg
              size-bytes: 2048290304
              width: 300
              height: 300
            ALBUM_NAME: The Dark Side of the Moon
            ARTIST: Spinal Tap
            TRACK_NAME: God Only Knows
            TRACK_NUMBER: "2"
            YEAR: "1992"
            DISC_NUMBER: "2"
            COMPILATION: true
            GENRE: GENRE
            ALBUM_ARTIST: ALBUM_ARTIST
            empty: true
    StorageNode:
      type: object
      properties:
        lib:
          type: string
          description: The path to the root of the music library
          example: /C:/Users/gavin/Music
        path:
          type: string
          description: The path, relative to the root of the music library, to this
            storage node
          example: /First album/1_track-one.mp3
        fields:
          $ref: '#/components/schemas/StorageNode_fields'
      description: 'A container for media. The most common mapping is to files: one
        StorageNode is a file. For music, this means an MP3 file, say, is a StorageNode,
        and its ID3 tag values are contained in the fields property.'
      example:
        path: /First album/1_track-one.mp3
        lib: /C:/Users/gavin/Music
        fields:
          COVER_ART:
            codec: jpeg
            size-bytes: 2048290304
            width: 300
            height: 300
          ALBUM_NAME: The Dark Side of the Moon
          ARTIST: Spinal Tap
          TRACK_NAME: God Only Knows
          TRACK_NUMBER: "2"
          YEAR: "1992"
          DISC_NUMBER: "2"
          COMPILATION: true
          GENRE: GENRE
          ALBUM_ARTIST: ALBUM_ARTIST
          empty: true
    StorageNodeCoverArt:
      type: object
      properties:
        width:
          type: integer
          description: The width of the image in pixels
          format: int32
          example: 300
        height:
          type: integer
          description: The height of the image in pixels
          format: int32
          example: 300
        size-bytes:
          type: integer
          format: int64
          example: 2048290304
        codec:
          type: string
          description: The image encoding
          enum:
          - jpeg
          - bmp
          - png
          - gif
      example:
        codec: jpeg
        size-bytes: 2048290304
        width: 300
        height: 300
    StorageNodeFields:
      type: object
      properties:
        ALBUM_NAME:
          type: string
          example: The Dark Side of the Moon
        ARTIST:
          type: string
          example: Spinal Tap
        YEAR:
          type: string
          example: "1992"
        GENRE:
          type: string
        TRACK_NAME:
          type: string
          example: God Only Knows
        ALBUM_ARTIST:
          type: string
        COVER_ART:
          $ref: '#/components/schemas/StorageNodeCoverArt'
        COMPILATION:
          type: boolean
        TRACK_NUMBER:
          type: string
          example: "2"
        DISC_NUMBER:
          type: string
          example: "2"
        empty:
          type: boolean
      additionalProperties:
        type: object
    StorageNode_fields:
      type: object
      properties:
        ALBUM_NAME:
          type: string
          example: The Dark Side of the Moon
        ARTIST:
          type: string
          example: Spinal Tap
        YEAR:
          type: string
          example: "1992"
        GENRE:
          type: string
        TRACK_NAME:
          type: string
          example: God Only Knows
        ALBUM_ARTIST:
          type: string
        COVER_ART:
          $ref: '#/components/schemas/StorageNodeCoverArt'
        COMPILATION:
          type: boolean
        TRACK_NUMBER:
          type: string
          example: "2"
        DISC_NUMBER:
          type: string
          example: "2"
        empty:
          type: boolean
      example:
        COVER_ART:
          codec: jpeg
          size-bytes: 2048290304
          width: 300
          height: 300
        ALBUM_NAME: The Dark Side of the Moon
        ARTIST: Spinal Tap
        TRACK_NAME: God Only Knows
        TRACK_NUMBER: "2"
        YEAR: "1992"
        DISC_NUMBER: "2"
        COMPILATION: true
        GENRE: GENRE
        ALBUM_ARTIST: ALBUM_ARTIST
        empty: true
